run:
  skip-dirs:
    - test/testdata_etc
    - pkg/golinters/goanalysis/(checker|passes)
    - data/
    - .vscode/
    - .directory/
    - debug/
    - vendor/
  skip-files: 
    - Gopkg.lock
    - .gitignore
    - ".*_test.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  dupl:
    # tokens count to trigger issue, 150 by default
    threshold: 100
  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: true
  funlen:
    # default is 60
    lines: 70
    # default is 40
    statements: 40
  gocognit:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 32 # TODO: down to 15
  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - performance
      - style
      - experimental
    disabled-checks:
      #- wrapperFunc
      - whyNoLint
  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 15
  godox:
    keywords:
      - "BUG"
      - "FIXME"
      #- "TODO"
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # the list of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.
        checks: argument,case,condition,operation,return,assign
  govet:
    check-shadowing: true
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by logutils.Log, logrus
      # is allowed to use only in logutils package
      - github.com/Sirupsen/logrus
      - gopkg.in/sirupsen/logrus.v0
      - gopkg.in/sirupsen/logrus.v1
      - gopkg.in/Sirupsen/logrus.v0
      - gopkg.in/Sirupsen/logrus.v1
  lll:
    line-length: 140 # 120 is default
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  misspell:
    locale: US
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    max-func-lines: 15
  unparam:
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  whitespace:
    multi-if: false   # Enforces newlines (or comments) after every multi-line if statement
    multi-func: false # Enforces newlines (or comments) after every multi-line function signature
  wsl:
    # If true append is only allowed to be cuddled if appending value is
    # matching variables, fields or types on line above. Default is true.
    strict-append: true
    # Allow calls and assignments to be cuddled as long as the lines have any
    # matching variables, fields or types. Default is true.
    allow-assign-and-call: true
    # Allow multiline assignments to be cuddled. Default is true.
    allow-multiline-assign: true
    # Allow declarations (var) to be cuddled.
    allow-cuddle-declarations: true
    # Allow trailing comments in ending of blocks
    allow-trailing-comment: false
    # Force newlines in end of case at this limit (0 = never).
    force-case-trailing-whitespace: 0

linters:
  enable-all: true
  disable:
    - goerr113
    - nlreturn
    - gci

issues:
  exclude:
    - "Version` is a global variable" # gochecknoglobals
    - "shadow: declaration of \"err\" shadows declaration at line" # govet
    - "a blank import should be only in a main or test package, or have a comment justifying it" # golint
    - "octalLiteral: suspicious octal args in" # gocritic
  exclude-rules:
    - text: "line is 164 characters"
      linters:
        - lll
